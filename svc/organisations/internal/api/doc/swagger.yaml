basePath: /api
definitions:
  V1.Request.CreateAccommodationVenueTemplate:
    properties:
      description:
        description: Description of the accommodation that this applies to.
        type: string
      name:
        description: The name of the template.
        minLength: 3
        type: string
      occupancy:
        $ref: '#/definitions/V1.Request[Model].VenueAccommodationTemplateOccupancyCreate'
      type:
        description: |-
          The type of accommodation that this template is for.
          Currently only supports 'room'
        enum:
        - room
        type: string
    required:
    - description
    - name
    - occupancy
    - type
    type: object
  V1.Request.CreateOrganisation:
    properties:
      name:
        description: The name of the organisation.
        minLength: 3
        type: string
      slug:
        description: |-
          A slug that will be used in URI's.
          Must only contain alphanumeric and hyphen characters
        minLength: 3
        type: string
    required:
    - name
    - slug
    type: object
  V1.Request.CreateVenue:
    properties:
      address:
        allOf:
        - $ref: '#/definitions/V1.Request[Model].VenueAddressCreate'
        description: The address of the venue.
      name:
        description: The name of the venue.
        minLength: 3
        type: string
      slug:
        description: |-
          The slug of the venue, used in URI's.
          Must only contain alphanumeric and hyphen characters.
          Must be unique within the organisation.
        minLength: 3
        type: string
      type:
        description: |-
          The type of venue.
          Currently only supports 'hotel'
        enum:
        - hotel
        type: string
    required:
    - address
    - name
    - slug
    - type
    type: object
  V1.Request.CreateVenueAccommodation:
    properties:
      description:
        description: |-
          Description of the accommodation that this applies to.
          Or null if venue_template_id is supplied.
        type: string
      name:
        description: |-
          The name of the template.
          Or null if venue_template_id is supplied.
        minLength: 3
        type: string
        x-nullable: true
      occupancy:
        $ref: '#/definitions/V1.Request[Model].VenueAccommodationOccupancyCreate'
      reference:
        description: A reference for this accommodation.
        minLength: 3
        type: string
      type:
        description: |-
          The type of accommodation that this template is for.
          Currently only supports 'room'.
          Or null if venue_template_id is supplied.
        enum:
        - room
        type: string
        x-nullable: true
      venue_template_id:
        type: string
    required:
    - description
    - name
    - occupancy
    - reference
    - type
    type: object
  V1.Request.PatchVenueAccommodation:
    properties:
      description:
        description: |-
          Description of the accommodation that this applies to.
          Or null to remove this setting and use the templates value.
        type: string
        x-nullable: true
      name:
        description: |-
          The name of the template.
          Or null to remove this setting and use the templates value.
        minLength: 3
        type: string
        x-nullable: true
      occupancy:
        $ref: '#/definitions/V1.Request[Model].VenueAccommodationOccupancyUpdate'
      reference:
        description: A reference for this accommodation.
        minLength: 3
        type: string
      type:
        description: |-
          The type of accommodation that this template is for.
          Currently only supports 'room'.
          Or null to remove this setting and use the templates value.
        enum:
        - room
        type: string
        x-nullable: true
      venue_template_id:
        type: string
        x-nullable: true
    type: object
  V1.Request.UpdateAccommodationVenueTemplate:
    properties:
      description:
        description: Description of the accommodation that this applies to.
        minLength: 10
        type: string
        x-nullable: true
      name:
        description: The name of the template.
        minLength: 3
        type: string
        x-nullable: true
      occupancy:
        allOf:
        - $ref: '#/definitions/V1.Request[Model].VenueAccommodationTemplateOccupancyUpdate'
        x-nullable: true
      type:
        description: |-
          The type of accommodation that this template is for.
          Currently only supports 'room'
        enum:
        - room
        type: string
        x-nullable: true
    type: object
  V1.Request.UpdateOrganisation:
    properties:
      name:
        description: The name of the organisation.
        minLength: 3
        type: string
        x-nullable: true
      slug:
        description: |-
          A slug that will be used in URI's.
          Must only contain alphanumeric and hyphen characters.
          Must be unique across all other organisations.
        minLength: 3
        type: string
        x-nullable: true
    type: object
  V1.Request.UpdateVenue:
    properties:
      address:
        allOf:
        - $ref: '#/definitions/V1.Request[Model].VenueAddressUpdate'
        description: The address of the venue.
        x-nullable: true
      name:
        description: The name of the venue.
        minLength: 3
        type: string
        x-nullable: true
      slug:
        description: |-
          The slug of the venue, used in URI's.
          Must only contain alphanumeric and hyphen characters.
          Must be unique within the organisation.
        minLength: 3
        type: string
        x-nullable: true
      type:
        description: |-
          The type of venue.
          Currently only supports 'hotel'
        enum:
        - hotel
        type: string
        x-nullable: true
    type: object
  V1.Request[Model].VenueAccommodationOccupancyCreate:
    properties:
      max:
        description: |-
          The maximum amount of people that must occupy the accommodation.
          If null or blank there will be no limit, or it will use the templates value.
          If provided, it must be greater than the min occupancy.
        minimum: 1
        type: integer
        x-nullable: true
      min:
        description: |-
          The minimum amount of people that must occupy the accommodation.
          Or null if venue_template_id is supplied.
        minimum: 1
        type: integer
        x-nullable: true
    required:
    - min
    type: object
  V1.Request[Model].VenueAccommodationOccupancyUpdate:
    properties:
      max:
        description: |-
          The maximum amount of people that must occupy the accommodation.
          If null or blank there will be no limit, or it will use the templates value.
        minimum: 1
        type: integer
        x-nullable: true
      min:
        description: |-
          The minimum amount of people that must occupy the accommodation.
          Or null to remove this setting and use the templates value.
        minimum: 1
        type: integer
        x-nullable: true
    type: object
  V1.Request[Model].VenueAccommodationTemplateOccupancyCreate:
    properties:
      max:
        description: |-
          The maximum amount of people that must occupy the accommodation.
          If null or blank there will be no limit.
          If provided, it must be greater than the min occupancy.
        minimum: 1
        type: integer
      min:
        description: The minimum amount of people that must occupy the accommodation.
        minimum: 1
        type: integer
    required:
    - max
    - min
    type: object
  V1.Request[Model].VenueAccommodationTemplateOccupancyUpdate:
    properties:
      max:
        description: |-
          The maximum amount of people that must occupy the accommodation.
          If null or blank there will be no limit.
          If provided, it must be greater than the min occupancy.
        minimum: 1
        type: integer
        x-nullable: true
      min:
        description: The minimum amount of people that must occupy the accommodation.
        minimum: 1
        type: integer
        x-nullable: true
    type: object
  V1.Request[Model].VenueAddressCreate:
    properties:
      lat:
        description: Latitude of the venue.
        minimum: 0
        type: number
      line_1:
        description: Line 1 of the address, typically number/name and street.
        minLength: 1
        type: string
      line_2:
        description: Line 2, extra information for the address if needed, optional.
        minLength: 1
        type: string
        x-nullable: true
      long:
        description: Longitude of the venue.
        minimum: 0
        type: number
      municipality:
        description: The town/city/village that the venue is in.
        minLength: 1
        type: string
      postcode:
        description: A valid UK postcode, following standard formats.
        type: string
    required:
    - lat
    - line_1
    - long
    - municipality
    - postcode
    type: object
  V1.Request[Model].VenueAddressUpdate:
    description: The changes to apply to the venue. Only include fields to change.
    properties:
      lat:
        description: Latitude of the venue.
        minimum: 0
        type: number
        x-nullable: true
      line_1:
        description: Line 1 of the address, typically number/name and street.
        minLength: 1
        type: string
        x-nullable: true
      line_2:
        description: Line 2, extra information for the address if needed, optional.
        minLength: 1
        type: string
        x-nullable: true
      long:
        description: Longitude of the venue.
        minimum: 0
        type: number
        x-nullable: true
      municipality:
        description: The town/city/village that the venue is in.
        minLength: 1
        type: string
        x-nullable: true
      postcode:
        description: A valid UK postcode, following standard formats.
        type: string
        x-nullable: true
    type: object
  V1.Response.CreateOrganisation:
    properties:
      data:
        $ref: '#/definitions/V1.Response[Model].Organisation'
    type: object
  V1.Response.Error:
    properties:
      message:
        description: An error message that may give you indication of the problem.
        type: string
    type: object
  V1.Response.GetOrganisation:
    properties:
      data:
        $ref: '#/definitions/V1.Response[Model].Organisation'
    type: object
  V1.Response.GetVenueAccommodation:
    properties:
      data:
        $ref: '#/definitions/V1.Response[Model].VenueAccommodation'
    type: object
  V1.Response.GetVenueAccommodationTemplate:
    properties:
      data:
        $ref: '#/definitions/V1.Response[Model].VenueAccommodationTemplate'
    type: object
  V1.Response.Invalid:
    properties:
      errors:
        additionalProperties:
          items:
            type: string
          type: array
        description: |-
          A KV map of errors during validation.
          The keys in the map correspond to the fields in the request.
          The keys are using dot notation to flatten any nested fields.
        type: object
    type: object
  V1.Response.ListMunicipalities:
    properties:
      data:
        items:
          $ref: '#/definitions/V1.Response[Model].Municipality'
        type: array
      meta:
        $ref: '#/definitions/V1.Response[Meta].List'
    type: object
  V1.Response.ListOrganisations:
    properties:
      body:
        $ref: '#/definitions/github_com_adamkirk-stayaway_organisations_internal_api_v1_responses.ListOrganisationsResponseBody'
    type: object
  V1.Response.ListVenueAccommodationTemplates:
    properties:
      data:
        items:
          $ref: '#/definitions/V1.Response[Model].VenueAccommodationTemplate'
        type: array
      meta:
        $ref: '#/definitions/V1.Response[Meta].List'
    type: object
  V1.Response.ListVenueAccommodations:
    properties:
      data:
        items:
          $ref: '#/definitions/V1.Response[Model].VenueAccommodation'
        type: array
      meta:
        $ref: '#/definitions/V1.Response[Meta].List'
    type: object
  V1.Response.ListVenues:
    properties:
      data:
        items:
          $ref: '#/definitions/V1.Response[Model].Venue'
        type: array
      meta:
        $ref: '#/definitions/V1.Response[Meta].List'
    type: object
  V1.Response.PatchOrganisation:
    properties:
      data:
        $ref: '#/definitions/V1.Response[Model].Organisation'
    type: object
  V1.Response.PatchVenue:
    properties:
      data:
        $ref: '#/definitions/V1.Response[Model].Venue'
    type: object
  V1.Response.PatchVenueAccommodation:
    properties:
      data:
        $ref: '#/definitions/V1.Response[Model].VenueAccommodation'
    type: object
  V1.Response.PatchVenueAccommodationTemplate:
    properties:
      data:
        $ref: '#/definitions/V1.Response[Model].VenueAccommodationTemplate'
    type: object
  V1.Response.PostVenue:
    properties:
      data:
        $ref: '#/definitions/V1.Response[Model].Venue'
    type: object
  V1.Response.PostVenueAccommodation:
    properties:
      data:
        $ref: '#/definitions/V1.Response[Model].VenueAccommodation'
    type: object
  V1.Response.PostVenueAccommodationTemplate:
    properties:
      data:
        $ref: '#/definitions/V1.Response[Model].VenueAccommodationTemplate'
    type: object
  V1.Response[Meta].List:
    properties:
      pagination:
        $ref: '#/definitions/V1.Response[Meta].Pagination'
      sorting:
        $ref: '#/definitions/V1.Response[Meta].SortOptions'
    type: object
  V1.Response[Meta].Pagination:
    properties:
      page:
        description: The page number for the results returned.
        type: integer
      per_page:
        description: The amount of results oer page.
        type: integer
      total_pages:
        description: The total amount of pages available with the value for per_page.
        type: integer
      total_results:
        description: The total amount of results in the system.
        type: integer
    type: object
  V1.Response[Meta].SortOptions:
    properties:
      order_by:
        description: Field by which the results are sorted.
        type: string
      order_dir:
        description: Direction that was used when sorting results.
        type: string
    type: object
  V1.Response[Model].Municipality:
    properties:
      country:
        description: The country in which the municipality resides.
        type: string
      id:
        description: The ID of the municipality.
        type: string
      iso3:
        description: ISO code for the country.
        type: string
      lat:
        description: The latitude of the municipality.
        type: number
      long:
        description: The longitude of the municipality.
        type: number
      name:
        description: The "common name" of the town/city/village.
        type: string
      name_ascii:
        description: An ascii friendly representation of the name.
        type: string
    type: object
  V1.Response[Model].Organisation:
    properties:
      id:
        description: ID of the organisation.
        type: string
      name:
        description: The name of the organisation.
        type: string
      slug:
        description: Unique slug used in URI's.
        type: string
    type: object
  V1.Response[Model].Venue:
    properties:
      address:
        allOf:
        - $ref: '#/definitions/V1.Response[Model].VenueAddress'
        description: The address of the venue.
      id:
        description: The ID of the venue.
        type: string
      name:
        description: The name of the venue.
        type: string
      organisation_id:
        description: The ID of the organisation that this venue is a part of.
        type: string
      slug:
        description: Slug used in URI's. Unique across all venues in the organisation.
        type: string
      type:
        description: |-
          The type of venue this is.
          Currently only 'hotel' is supported.
        type: string
    type: object
  V1.Response[Model].VenueAccommodation:
    properties:
      config:
        allOf:
        - $ref: '#/definitions/V1.Response[Model].VenueAccommodationConfig'
        description: |-
          The final configuration used by the accommodation. This is the result of
          merging any configuration from the template and the overrides of this
          accommodation. If there was no template, this is identical to the overrides.
      id:
        description: The ID of the template.
        type: string
      overrides:
        allOf:
        - $ref: '#/definitions/V1.Response[Model].VenueAccommodationOverrides'
        description: |-
          The overrides that were supplied upon creation. These may all be set, or may
          all be null. They may only be null if the accommodation uses a template.
      reference:
        type: string
      venue_id:
        description: The ID of the venue this template exists in.
        type: string
      venue_template_id:
        description: The ID of the venue template used by this accommodation.
        type: string
    type: object
  V1.Response[Model].VenueAccommodationConfig:
    properties:
      description:
        type: string
      name:
        type: string
      occupancy:
        $ref: '#/definitions/V1.Response[Model].VenueAccommodationOccupancy'
      type:
        type: string
    type: object
  V1.Response[Model].VenueAccommodationOccupancy:
    properties:
      max:
        description: |-
          The maximum occupancy for any templates using this template.
          Null means there is no maximum.
        type: integer
      min:
        description: The minimum occupancy for any templates using this template.
        type: integer
    type: object
  V1.Response[Model].VenueAccommodationOccupancyOverrides:
    properties:
      max:
        description: |-
          The maximum occupancy for any templates using this template.
          Null means there is no maximum.
        type: integer
      min:
        description: |-
          The minimum occupancy for any templates using this template.
          Can be null if the accommodation has a template.
        type: integer
    type: object
  V1.Response[Model].VenueAccommodationOverrides:
    properties:
      description:
        type: string
      name:
        type: string
      occupancy:
        $ref: '#/definitions/V1.Response[Model].VenueAccommodationOccupancyOverrides'
      type:
        type: string
    type: object
  V1.Response[Model].VenueAccommodationTemplate:
    properties:
      description:
        description: A description about the accommodation.
        type: string
      id:
        description: The ID of the template.
        type: string
      name:
        description: The name of the template.
        type: string
      occupancy:
        allOf:
        - $ref: '#/definitions/V1.Response[Model].VenueAccommodationTemplateOccupancy'
        description: The settings for occupancy.
      type:
        description: |-
          The type of accommodation this is.
          Currently only 'room' is supported.
        type: string
      venue_id:
        description: The ID of the venue this template exists in.
        type: string
    type: object
  V1.Response[Model].VenueAccommodationTemplateOccupancy:
    properties:
      max:
        description: |-
          The maximum occupancy for any templates using this template.
          Null means there is no maximum.
        type: integer
      min:
        description: The minimum occupancy for any templates using this template.
        type: integer
    type: object
  V1.Response[Model].VenueAddress:
    properties:
      lat:
        description: The latitude of the venue.
        type: number
      line_1:
        description: Line 1 of the address. Typically number/name and street/road.
        type: string
      line_2:
        description: Line 2 of the address. May be null.
        type: string
      long:
        description: The longiitude of the venue.
        type: number
      municipality:
        description: The town/city in which the venue is situated.
        type: string
      postcode:
        description: The postcode of the venue.
        type: string
    type: object
  github_com_adamkirk-stayaway_organisations_internal_api_v1_responses.ListOrganisationsResponseBody:
    properties:
      data:
        items:
          $ref: '#/definitions/V1.Response[Model].Organisation'
        type: array
      meta:
        $ref: '#/definitions/V1.Response[Meta].List'
    type: object
host: organisations.stayaway.test
info:
  contact:
    email: adamkirk@example.com
    name: API Support
    url: https://github.com/adamkirk/stayaway
  description: This is an API for managing organisations in the stayaway ecosystem.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Stayaway - Organisations
  version: "1.0"
paths:
  /v1/_probes/startup:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "502":
          description: Bad Gateway
        "504":
          description: Gateway Timeout
      summary: Check is the app is listening
      tags:
      - Probes
  /v1/municipalities:
    get:
      consumes:
      - application/json
      parameters:
      - collectionFormat: csv
        description: |-
          Countries to filter the municipalities by.
          Currently we only support United Kingdom anyway.
        in: query
        items:
          type: string
        name: country
        type: array
      - description: The field by which to order the results.
        enum:
        - name
        in: query
        name: order_by
        type: string
      - description: The direction to order the results by.
        enum:
        - asc
        - desc
        in: query
        name: order_dir
        type: string
      - description: |-
          The page to display.
          An empty list may be returned if going beyond the last page of results.
        in: query
        minimum: 1
        name: page
        type: integer
      - description: The amount of results to display per page.
        in: query
        maximum: 100
        minimum: 1
        name: per_page
        type: integer
      - description: |-
          Characters to use as a prefix in searching by the name.
          Useful for a "typeahead" widget.
        in: query
        name: prefix
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/V1.Response.ListMunicipalities'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/V1.Response.Invalid'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/V1.Response.Error'
      summary: List all municipalities that can be used
      tags:
      - Municipalities
  /v1/organisations:
    get:
      consumes:
      - application/json
      parameters:
      - description: The field by which to order the results.
        enum:
        - name
        - slug
        in: query
        name: order_by
        type: string
      - description: The direction to order the results by.
        enum:
        - asc
        - desc
        in: query
        name: order_dir
        type: string
      - description: |-
          The page to display.
          An empty list may be returned if going beyond the last page of results.
        in: query
        minimum: 1
        name: page
        type: integer
      - description: The amount of results to display per page.
        in: query
        maximum: 100
        minimum: 1
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/V1.Response.ListOrganisations'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/V1.Response.Invalid'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/V1.Response.Error'
      summary: List all organisations
      tags:
      - Organisations
    post:
      consumes:
      - application/json
      parameters:
      - description: Organisation definition
        in: body
        name: Organisation
        required: true
        schema:
          $ref: '#/definitions/V1.Request.CreateOrganisation'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/V1.Response.CreateOrganisation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/V1.Response.Invalid'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/V1.Response.Error'
      summary: Create an organisation
      tags:
      - Organisations
  /v1/organisations/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: The Organisation ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/V1.Response.Invalid'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/V1.Response.Error'
      summary: Delete an organisation
      tags:
      - Organisations
    get:
      consumes:
      - application/json
      parameters:
      - description: The Organisation ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/V1.Response.GetOrganisation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/V1.Response.Invalid'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/V1.Response.Error'
      summary: Get an organisation
      tags:
      - Organisations
    patch:
      consumes:
      - application/json
      parameters:
      - description: The Organisation ID
        in: path
        name: id
        required: true
        type: string
      - description: Organisation definition
        in: body
        name: Changes
        required: true
        schema:
          $ref: '#/definitions/V1.Request.UpdateOrganisation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/V1.Response.PatchOrganisation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/V1.Response.Invalid'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/V1.Response.Error'
      summary: Update an organisation
      tags:
      - Organisations
  /v1/organisations/{orgId}/venues:
    get:
      consumes:
      - application/json
      parameters:
      - description: The Organisations ID
        in: path
        name: orgId
        required: true
        type: string
      - in: query
        name: order_by
        type: string
      - in: query
        name: order_dir
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/V1.Response.ListVenues'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/V1.Response.Invalid'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/V1.Response.Error'
      summary: List all venues for an organisation
      tags:
      - Venues
    post:
      consumes:
      - application/json
      parameters:
      - description: The Organisations ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Venue definition
        in: body
        name: Venue
        required: true
        schema:
          $ref: '#/definitions/V1.Request.CreateVenue'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/V1.Response.PostVenue'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/V1.Response.Invalid'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/V1.Response.Error'
      summary: Create a venue for an organisation
      tags:
      - Venues
  /v1/organisations/{orgId}/venues/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: The Organisations ID
        in: path
        name: orgId
        required: true
        type: string
      - description: The Venues ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/V1.Response.Invalid'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/V1.Response.Error'
      summary: Delete a venue from an organisation
      tags:
      - Venues
    get:
      consumes:
      - application/json
      parameters:
      - description: The Organisations ID
        in: path
        name: orgId
        required: true
        type: string
      - description: The Venues ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/V1.Response.PostVenue'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/V1.Response.Invalid'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/V1.Response.Error'
      summary: Get a venue for an organisation
      tags:
      - Venues
    patch:
      consumes:
      - application/json
      parameters:
      - description: The Organisations ID
        in: path
        name: orgId
        required: true
        type: string
      - description: The Venues ID
        in: path
        name: id
        required: true
        type: string
      - description: Venue changes
        in: body
        name: Changes
        required: true
        schema:
          $ref: '#/definitions/V1.Request.UpdateVenue'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/V1.Response.PatchVenue'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/V1.Response.Invalid'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/V1.Response.Error'
      summary: Update a venue for an organisation
      tags:
      - Venues
  /v1/organisations/{orgId}/venues/{venueId}/accommodation-templates:
    get:
      consumes:
      - application/json
      parameters:
      - description: The Organisations ID
        in: path
        name: orgId
        required: true
        type: string
      - description: The Venues ID
        in: path
        name: venueId
        required: true
        type: string
      - description: The field by which to order the results.
        enum:
        - name
        in: query
        name: order_by
        type: string
      - description: The direction to order the results by.
        enum:
        - asc
        - desc
        in: query
        name: order_dir
        type: string
      - description: |-
          The page to display.
          An empty list may be returned if going beyond the last page of results.
        in: query
        minimum: 1
        name: page
        type: integer
      - description: The amount of results to display per page.
        in: query
        maximum: 100
        minimum: 1
        name: per_page
        type: integer
      - description: |-
          Characters to use as a prefix in searching by the name.
          Useful for a "typeahead" widget.
        in: query
        name: prefix
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/V1.Response.ListVenueAccommodationTemplates'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/V1.Response.Invalid'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/V1.Response.Error'
      summary: List all accommodation templates for a venue
      tags:
      - AccommodationTemplates
    post:
      consumes:
      - application/json
      parameters:
      - description: The Organisations ID
        in: path
        name: orgId
        required: true
        type: string
      - description: The Venues ID
        in: path
        name: venueId
        required: true
        type: string
      - description: Venue Accommodation Template definition
        in: body
        name: VenueAccommodationTemplate
        required: true
        schema:
          $ref: '#/definitions/V1.Request.CreateAccommodationVenueTemplate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/V1.Response.PostVenueAccommodationTemplate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/V1.Response.Invalid'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/V1.Response.Error'
      summary: Create a venue accommodation template for an organisation
      tags:
      - AccommodationTemplates
  /v1/organisations/{orgId}/venues/{venueId}/accommodation-templates/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: The Organisations ID
        in: path
        name: orgId
        required: true
        type: string
      - description: The Venues ID
        in: path
        name: venueId
        required: true
        type: string
      - description: The template ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/V1.Response.Invalid'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/V1.Response.Error'
      summary: Delete a venue accommodation template
      tags:
      - AccommodationTemplates
    get:
      consumes:
      - application/json
      parameters:
      - description: The Organisations ID
        in: path
        name: orgId
        required: true
        type: string
      - description: The Venues ID
        in: path
        name: venueId
        required: true
        type: string
      - description: The ID of the template
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/V1.Response.GetVenueAccommodationTemplate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/V1.Response.Invalid'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/V1.Response.Error'
      summary: Get a venue accommodation template
      tags:
      - AccommodationTemplates
    patch:
      consumes:
      - application/json
      parameters:
      - description: The Organisations ID
        in: path
        name: orgId
        required: true
        type: string
      - description: The Venues ID
        in: path
        name: venueId
        required: true
        type: string
      - description: The ID of the template
        in: path
        name: id
        required: true
        type: string
      - description: Venue changes
        in: body
        name: Changes
        required: true
        schema:
          $ref: '#/definitions/V1.Request.UpdateAccommodationVenueTemplate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/V1.Response.PatchVenueAccommodationTemplate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/V1.Response.Invalid'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/V1.Response.Error'
      summary: Update a venue accommodation template
      tags:
      - AccommodationTemplates
  /v1/organisations/{orgId}/venues/{venueId}/accommodations:
    get:
      consumes:
      - application/json
      parameters:
      - description: The Organisations ID
        in: path
        name: orgId
        required: true
        type: string
      - description: The Venues ID
        in: path
        name: venueId
        required: true
        type: string
      - description: The field by which to order the results.
        enum:
        - name
        in: query
        name: order_by
        type: string
      - description: The direction to order the results by.
        enum:
        - asc
        - desc
        in: query
        name: order_dir
        type: string
      - description: |-
          The page to display.
          An empty list may be returned if going beyond the last page of results.
        in: query
        minimum: 1
        name: page
        type: integer
      - description: The amount of results to display per page.
        in: query
        maximum: 100
        minimum: 1
        name: per_page
        type: integer
      - description: |-
          Characters to use as a prefix in searching by the name.
          Useful for a "typeahead" widget.
        in: query
        name: prefix
        type: string
      - in: query
        name: venue_template_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/V1.Response.ListVenueAccommodations'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/V1.Response.Invalid'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/V1.Response.Error'
      summary: List all accommodations for a venue
      tags:
      - Accommodations
    post:
      consumes:
      - application/json
      parameters:
      - description: The Organisations ID
        in: path
        name: orgId
        required: true
        type: string
      - description: The Venues ID
        in: path
        name: venueId
        required: true
        type: string
      - description: Venue Accommodation definition
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/V1.Request.CreateVenueAccommodation'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/V1.Response.PostVenueAccommodation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/V1.Response.Invalid'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/V1.Response.Error'
      summary: Create an accommodation for a venue
      tags:
      - Accommodations
  /v1/organisations/{orgId}/venues/{venueId}/accommodations/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: The Organisations ID
        in: path
        name: orgId
        required: true
        type: string
      - description: The Venues ID
        in: path
        name: venueId
        required: true
        type: string
      - description: The accommodation ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/V1.Response.Invalid'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/V1.Response.Error'
      summary: Delete a venue accommodation
      tags:
      - Accommodations
    get:
      consumes:
      - application/json
      parameters:
      - description: The Organisations ID
        in: path
        name: orgId
        required: true
        type: string
      - description: The Venues ID
        in: path
        name: venueId
        required: true
        type: string
      - description: The ID of the accommodation
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/V1.Response.GetVenueAccommodation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/V1.Response.Invalid'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/V1.Response.Error'
      summary: Get a venue accommodation
      tags:
      - Accommodations
    patch:
      consumes:
      - application/json
      parameters:
      - description: The Organisations ID
        in: path
        name: orgId
        required: true
        type: string
      - description: The Venues ID
        in: path
        name: venueId
        required: true
        type: string
      - description: The ID of the template
        in: path
        name: id
        required: true
        type: string
      - description: Accommodation changes
        in: body
        name: Changes
        required: true
        schema:
          $ref: '#/definitions/V1.Request.PatchVenueAccommodation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/V1.Response.PatchVenueAccommodation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/V1.Response.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/V1.Response.Invalid'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/V1.Response.Error'
      summary: Update a venue accommodation
      tags:
      - Accommodations
swagger: "2.0"
